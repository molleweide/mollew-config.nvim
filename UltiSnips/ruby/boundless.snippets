global !p
def camelcase(string):
		words = string.split("_")
		words = map(lambda word: word.capitalize(), words)
		return ''.join(words)

def containingFolder(path):
		words = path.split("/")
		return words[len(words) - 2]

endglobal

snippet panel "module Form::Panel::(...)::(...)"
module Form::Panel::`!p snip.rv = camelcase(containingFolder(path))`
  class `!p snip.rv = camelcase(snip.basename)` < Base
	end
end
endsnippet

snippet kmodel "class KaseModel::(...) < KaseModel::Base"
class KaseModel::`!p snip.rv = camelcase(snip.basename)` < KaseModel::Base
end
endsnippet

snippet pspec "scenario 'filling out (...)'"
scenario "filling out ${1:panel_name}" do
	fill_out_panel "${2:chapter_name}", "TODO `!p snip.rv = t[1]`" do
		expect(page).to have_content('${3:content}')

		fill_in '${4:field}', with: '${5:value}'
	end
end
endsnippet
